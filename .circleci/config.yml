---

docker_image: &docker_image
  docker:
    - image: circleci/buildpack-deps:stable-curl

docker_login: &docker_login
  name: "Docker Login"
  command: |
    docker login -u $DOCKER_USER -p $DOCKER_PASS

build_latest: &build_latest
  name: "Docker Build Latest"
  command: |
    docker build --build-arg TF_VERSION=$TF_VERSION --tag $IMAGE_NAME:latest .

#    docker push $IMAGE_NAME:latest

build_core_stable: &build_core_stable
  name: "Docker build and push asicsdigital/hermes:stable"
  command: |
    docker build --tag $IMAGE_NAME:stable .
    docker push $IMAGE_NAME:stable

build_core_tagged: &build_core_tagged
  name: "Docker build and push asicsdigital/hermes tagged release"
  command: |
    docker build --tag $IMAGE_NAME:$CIRCLE_TAG .
    docker tag $IMAGE_NAME:$CIRCLE_TAG $IMAGE_NAME:$(echo $CIRCLE_TAG | sed 's/v//')
    docker tag $IMAGE_NAME:$CIRCLE_TAG $IMAGE_NAME:$(echo $CIRCLE_TAG | cut -d\. -f 1,2 | sed 's/v//')
    docker tag $IMAGE_NAME:$CIRCLE_TAG $IMAGE_NAME:$(echo $CIRCLE_TAG | cut -d\. -f 1   | sed 's/v//')
# push tags
    docker push $IMAGE_NAME:$CIRCLE_TAG
    docker push $IMAGE_NAME:$(echo $CIRCLE_TAG | sed 's/v//')
    docker push $IMAGE_NAME:$(echo $CIRCLE_TAG | cut -d\. -f 1,2 | sed 's/v//')
    docker push $IMAGE_NAME:$(echo $CIRCLE_TAG | cut -d\. -f 1   | sed 's/v//')



build_terraform_image: &build_terraform_image
  name: "Docker Build Hermes Terraform Image"
  command: |
    echo "Building Image $IMAGE_NAME:$TAG"
    docker build --build-arg TF_VERSION=$TF_VERSION --tag $IMAGE_NAME:$TAG .

#    docker push $IMAGE_NAME:$TAG
  requires:
      - "Docker Build Latest"

build_branches: &build_branches
  name: "Docker Build Feature Branch"
  command: |
    docker build -t $IMAGE_NAME:$CIRCLE_USERNAME-$TAG-$CIRCLE_SHA1 .

#    docker push $IMAGE_NAME:$CIRCLE_USERNAME-$TAG-$CIRCLE_SHA1

project_env_vars: &project_env_vars
  environment:
    IMAGE_NAME: asicsdigital/hermes

workflows:
  version: 2
  build_and_push:
    jobs:
      - build-v0.X:
          context: org-global
          filters:
            branches:
              only: master

      - build_0.X:
          context: org-global
          filters:
            branches:
              ignore: master

      - deploy-stable:
          context: org-global
          filters:
            tags:
              only: stable
            branches:
              ignore: /.*/

      - deploy-core-tagged:
          context: org-global
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/

version: 2
jobs:
  build-v0.X:
    <<: *docker_image
    <<: *project_env_vars
    steps:
      - checkout
      - setup_remote_docker
      - run:
          <<: *docker_login
      - run:
          environment:
            TF_VERSION: 0.11.8
          <<: *build_latest
      - run:
          environment:
            TF_VERSION: 0.11.8
            TAG: terraform-0.11.8
          <<: *build_terraform_image
      - run:
          environment:
            TF_VERSION: 0.11.7
            TAG: terraform-0.11.7
          <<: *build_terraform_image
      - run:
          environment:
            TF_VERSION: 0.11.6
            TAG: terraform-0.11.6
          <<: *build_terraform_image
      - run:
          environment:
            TF_VERSION: 0.11.5
            TAG: terraform-0.11.5
          <<: *build_terraform_image
      - run:
          environment:
            TF_VERSION: 0.11.4
            TAG: terraform-0.11.4
          <<: *build_terraform_image
      - run:
          environment:
            TF_VERSION: 0.11.3
            TAG: terraform-0.11.3
          <<: *build_terraform_image
      - run:
          environment:
            TF_VERSION: 0.11.2
            TAG: terraform-0.11.2
          <<: *build_terraform_image
      - run:
          environment:
            TF_VERSION: 0.11.1
            TAG: terraform-0.11.1
          <<: *build_terraform_image
      - run:
          working_directory: ~/project/0.X/terraform
          environment:
            TF_VERSION: 0.10.8
            TAG: terraform-0.10.8
          <<: *build_terraform_image

  deploy-stable:
    <<: *docker_image
    <<: *project_env_vars
    steps:
      - checkout
      - setup_remote_docker
      - run:
          <<: *docker_login
      - run:
          working_directory: ~/project/0.X
          environment:
          <<: *build_core_stable

  deploy-core-tagged:
    <<: *docker_image
    <<: *project_env_vars
    steps:
      - checkout
      - setup_remote_docker
      - run:
          <<: *docker_login
      - run:
          working_directory: ~/project/0.X
          environment:
          <<: *build_core_tagged


  # trigger build_0.X off the tag not branch
  build_0.X:
    <<: *docker_image
    <<: *project_env_vars
    steps:
      - checkout
      - setup_remote_docker
      - run:
          <<: *docker_login
      - run:
          working_directory: ~/project/0.X
          environment:
          <<: *build_local
      - run:
          working_directory: ~/project/0.X
          environment:
            TAG: core
          <<: *build_branches
      - run:
          working_directory: ~/project/0.X/terraform
          environment:
            TAG: terraform
          <<: *build_branches
      # Test of this block
      - run:
          working_directory: ~/project/0.X/terraform
          environment:
            TF_VERSION: 0.10.8
            TAG: terraform-0.10.8
          <<: *build_terraform_image
